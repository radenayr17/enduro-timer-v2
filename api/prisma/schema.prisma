// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  username  String @unique
  password  String
  firstName String
  lastName  String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  UserSession UserSession[]
  Race        Race[]
}

model UserSession {
  id           String   @id @default(uuid())
  userId       String
  idToken      String   @db.Text
  refreshToken String   @db.Text
  expiresAt    DateTime

  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Race {
  id          String   @id @default(uuid())
  name        String
  description String   @db.Text()
  from        DateTime
  to          DateTime
  userId      String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  user         User?          @relation(fields: [userId], references: [id])
  RaceStage    RaceStage[]
  RaceCategory RaceCategory[]
  RaceRecord   RaceRecord[]
}

model RaceStage {
  id     String @id @default(uuid())
  name   String
  key    String
  raceId String

  createdAt DateTime @default(now())

  race       Race         @relation(fields: [raceId], references: [id])
  RacerTime  RacerTime[]
  RaceRecord RaceRecord[]
}

model RaceCategory {
  id     String @id @default(uuid())
  name   String
  key    String
  raceId String

  createdAt DateTime @default(now())

  race  Race    @relation(fields: [raceId], references: [id])
  racer Racer[]
}

model Racer {
  id         String @id @default(uuid())
  number     String
  firstName  String
  lastName   String
  categoryId String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  category   RaceCategory @relation(fields: [categoryId], references: [id])
  RacerTime  RacerTime[]
  RaceRecord RaceRecord[]
}

model RacerTime {
  id         String    @id @default(uuid())
  startTime  DateTime
  finishTime DateTime?
  diffTime   Int       @default(0)
  racerId    String
  stageId    String
  recordId   String?

  createdAt DateTime @default(now())

  racer  Racer       @relation(fields: [racerId], references: [id])
  stage  RaceStage   @relation(fields: [stageId], references: [id])
  record RaceRecord? @relation(fields: [recordId], references: [id])
}

model RaceRecord {
  id      String   @id @default(uuid())
  raceId  String
  stageId String
  racerId String?
  time    DateTime

  createdAt DateTime @default(now())

  racer     Racer?      @relation(fields: [racerId], references: [id])
  race      Race        @relation(fields: [raceId], references: [id])
  stage     RaceStage   @relation(fields: [stageId], references: [id])
  racerTime RacerTime[]
}
